import { SENSITIVE_STRING } from "@aws-sdk/smithy-client";
import { ElasticsearchServiceServiceException as __BaseException } from "./ElasticsearchServiceServiceException";
export const InboundCrossClusterSearchConnectionStatusCode = {
    APPROVED: "APPROVED",
    DELETED: "DELETED",
    DELETING: "DELETING",
    PENDING_ACCEPTANCE: "PENDING_ACCEPTANCE",
    REJECTED: "REJECTED",
    REJECTING: "REJECTING",
};
export class DisabledOperationException extends __BaseException {
    constructor(opts) {
        super({
            name: "DisabledOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "DisabledOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DisabledOperationException.prototype);
    }
}
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
    }
}
export const OptionState = {
    Active: "Active",
    Processing: "Processing",
    RequiresIndexDocuments: "RequiresIndexDocuments",
};
export class BaseException extends __BaseException {
    constructor(opts) {
        super({
            name: "BaseException",
            $fault: "client",
            ...opts,
        });
        this.name = "BaseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, BaseException.prototype);
    }
}
export class InternalException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalException.prototype);
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
    }
}
export const DomainPackageStatus = {
    ACTIVE: "ACTIVE",
    ASSOCIATING: "ASSOCIATING",
    ASSOCIATION_FAILED: "ASSOCIATION_FAILED",
    DISSOCIATING: "DISSOCIATING",
    DISSOCIATION_FAILED: "DISSOCIATION_FAILED",
};
export const PackageType = {
    TXT_DICTIONARY: "TXT-DICTIONARY",
};
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
    }
}
export const PrincipalType = {
    AWS_ACCOUNT: "AWS_ACCOUNT",
    AWS_SERVICE: "AWS_SERVICE",
};
export const DeploymentStatus = {
    COMPLETED: "COMPLETED",
    ELIGIBLE: "ELIGIBLE",
    IN_PROGRESS: "IN_PROGRESS",
    NOT_ELIGIBLE: "NOT_ELIGIBLE",
    PENDING_UPDATE: "PENDING_UPDATE",
};
export const AutoTuneDesiredState = {
    DISABLED: "DISABLED",
    ENABLED: "ENABLED",
};
export const TimeUnit = {
    HOURS: "HOURS",
};
export const TLSSecurityPolicy = {
    POLICY_MIN_TLS_1_0_2019_07: "Policy-Min-TLS-1-0-2019-07",
    POLICY_MIN_TLS_1_2_2019_07: "Policy-Min-TLS-1-2-2019-07",
};
export const VolumeType = {
    gp2: "gp2",
    gp3: "gp3",
    io1: "io1",
    standard: "standard",
};
export const ESPartitionInstanceType = {
    c4_2xlarge_elasticsearch: "c4.2xlarge.elasticsearch",
    c4_4xlarge_elasticsearch: "c4.4xlarge.elasticsearch",
    c4_8xlarge_elasticsearch: "c4.8xlarge.elasticsearch",
    c4_large_elasticsearch: "c4.large.elasticsearch",
    c4_xlarge_elasticsearch: "c4.xlarge.elasticsearch",
    c5_18xlarge_elasticsearch: "c5.18xlarge.elasticsearch",
    c5_2xlarge_elasticsearch: "c5.2xlarge.elasticsearch",
    c5_4xlarge_elasticsearch: "c5.4xlarge.elasticsearch",
    c5_9xlarge_elasticsearch: "c5.9xlarge.elasticsearch",
    c5_large_elasticsearch: "c5.large.elasticsearch",
    c5_xlarge_elasticsearch: "c5.xlarge.elasticsearch",
    d2_2xlarge_elasticsearch: "d2.2xlarge.elasticsearch",
    d2_4xlarge_elasticsearch: "d2.4xlarge.elasticsearch",
    d2_8xlarge_elasticsearch: "d2.8xlarge.elasticsearch",
    d2_xlarge_elasticsearch: "d2.xlarge.elasticsearch",
    i2_2xlarge_elasticsearch: "i2.2xlarge.elasticsearch",
    i2_xlarge_elasticsearch: "i2.xlarge.elasticsearch",
    i3_16xlarge_elasticsearch: "i3.16xlarge.elasticsearch",
    i3_2xlarge_elasticsearch: "i3.2xlarge.elasticsearch",
    i3_4xlarge_elasticsearch: "i3.4xlarge.elasticsearch",
    i3_8xlarge_elasticsearch: "i3.8xlarge.elasticsearch",
    i3_large_elasticsearch: "i3.large.elasticsearch",
    i3_xlarge_elasticsearch: "i3.xlarge.elasticsearch",
    m3_2xlarge_elasticsearch: "m3.2xlarge.elasticsearch",
    m3_large_elasticsearch: "m3.large.elasticsearch",
    m3_medium_elasticsearch: "m3.medium.elasticsearch",
    m3_xlarge_elasticsearch: "m3.xlarge.elasticsearch",
    m4_10xlarge_elasticsearch: "m4.10xlarge.elasticsearch",
    m4_2xlarge_elasticsearch: "m4.2xlarge.elasticsearch",
    m4_4xlarge_elasticsearch: "m4.4xlarge.elasticsearch",
    m4_large_elasticsearch: "m4.large.elasticsearch",
    m4_xlarge_elasticsearch: "m4.xlarge.elasticsearch",
    m5_12xlarge_elasticsearch: "m5.12xlarge.elasticsearch",
    m5_2xlarge_elasticsearch: "m5.2xlarge.elasticsearch",
    m5_4xlarge_elasticsearch: "m5.4xlarge.elasticsearch",
    m5_large_elasticsearch: "m5.large.elasticsearch",
    m5_xlarge_elasticsearch: "m5.xlarge.elasticsearch",
    r3_2xlarge_elasticsearch: "r3.2xlarge.elasticsearch",
    r3_4xlarge_elasticsearch: "r3.4xlarge.elasticsearch",
    r3_8xlarge_elasticsearch: "r3.8xlarge.elasticsearch",
    r3_large_elasticsearch: "r3.large.elasticsearch",
    r3_xlarge_elasticsearch: "r3.xlarge.elasticsearch",
    r4_16xlarge_elasticsearch: "r4.16xlarge.elasticsearch",
    r4_2xlarge_elasticsearch: "r4.2xlarge.elasticsearch",
    r4_4xlarge_elasticsearch: "r4.4xlarge.elasticsearch",
    r4_8xlarge_elasticsearch: "r4.8xlarge.elasticsearch",
    r4_large_elasticsearch: "r4.large.elasticsearch",
    r4_xlarge_elasticsearch: "r4.xlarge.elasticsearch",
    r5_12xlarge_elasticsearch: "r5.12xlarge.elasticsearch",
    r5_2xlarge_elasticsearch: "r5.2xlarge.elasticsearch",
    r5_4xlarge_elasticsearch: "r5.4xlarge.elasticsearch",
    r5_large_elasticsearch: "r5.large.elasticsearch",
    r5_xlarge_elasticsearch: "r5.xlarge.elasticsearch",
    t2_medium_elasticsearch: "t2.medium.elasticsearch",
    t2_micro_elasticsearch: "t2.micro.elasticsearch",
    t2_small_elasticsearch: "t2.small.elasticsearch",
    ultrawarm1_large_elasticsearch: "ultrawarm1.large.elasticsearch",
    ultrawarm1_medium_elasticsearch: "ultrawarm1.medium.elasticsearch",
};
export const ESWarmPartitionInstanceType = {
    ultrawarm1_large_elasticsearch: "ultrawarm1.large.elasticsearch",
    ultrawarm1_medium_elasticsearch: "ultrawarm1.medium.elasticsearch",
};
export const LogType = {
    AUDIT_LOGS: "AUDIT_LOGS",
    ES_APPLICATION_LOGS: "ES_APPLICATION_LOGS",
    INDEX_SLOW_LOGS: "INDEX_SLOW_LOGS",
    SEARCH_SLOW_LOGS: "SEARCH_SLOW_LOGS",
};
export const AutoTuneState = {
    DISABLED: "DISABLED",
    DISABLED_AND_ROLLBACK_COMPLETE: "DISABLED_AND_ROLLBACK_COMPLETE",
    DISABLED_AND_ROLLBACK_ERROR: "DISABLED_AND_ROLLBACK_ERROR",
    DISABLED_AND_ROLLBACK_IN_PROGRESS: "DISABLED_AND_ROLLBACK_IN_PROGRESS",
    DISABLED_AND_ROLLBACK_SCHEDULED: "DISABLED_AND_ROLLBACK_SCHEDULED",
    DISABLE_IN_PROGRESS: "DISABLE_IN_PROGRESS",
    ENABLED: "ENABLED",
    ENABLE_IN_PROGRESS: "ENABLE_IN_PROGRESS",
    ERROR: "ERROR",
};
export class InvalidTypeException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidTypeException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTypeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTypeException.prototype);
    }
}
export class ResourceAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
    }
}
export const OutboundCrossClusterSearchConnectionStatusCode = {
    ACTIVE: "ACTIVE",
    DELETED: "DELETED",
    DELETING: "DELETING",
    PENDING_ACCEPTANCE: "PENDING_ACCEPTANCE",
    PROVISIONING: "PROVISIONING",
    REJECTED: "REJECTED",
    VALIDATING: "VALIDATING",
    VALIDATION_FAILED: "VALIDATION_FAILED",
};
export const PackageStatus = {
    AVAILABLE: "AVAILABLE",
    COPYING: "COPYING",
    COPY_FAILED: "COPY_FAILED",
    DELETED: "DELETED",
    DELETE_FAILED: "DELETE_FAILED",
    DELETING: "DELETING",
    VALIDATING: "VALIDATING",
    VALIDATION_FAILED: "VALIDATION_FAILED",
};
export const VpcEndpointStatus = {
    ACTIVE: "ACTIVE",
    CREATE_FAILED: "CREATE_FAILED",
    CREATING: "CREATING",
    DELETE_FAILED: "DELETE_FAILED",
    DELETING: "DELETING",
    UPDATE_FAILED: "UPDATE_FAILED",
    UPDATING: "UPDATING",
};
export const ScheduledAutoTuneActionType = {
    JVM_HEAP_SIZE_TUNING: "JVM_HEAP_SIZE_TUNING",
    JVM_YOUNG_GEN_TUNING: "JVM_YOUNG_GEN_TUNING",
};
export const ScheduledAutoTuneSeverityType = {
    HIGH: "HIGH",
    LOW: "LOW",
    MEDIUM: "MEDIUM",
};
export const AutoTuneType = {
    SCHEDULED_ACTION: "SCHEDULED_ACTION",
};
export const OverallChangeStatus = {
    COMPLETED: "COMPLETED",
    FAILED: "FAILED",
    PENDING: "PENDING",
    PROCESSING: "PROCESSING",
};
export const RollbackOnDisable = {
    DEFAULT_ROLLBACK: "DEFAULT_ROLLBACK",
    NO_ROLLBACK: "NO_ROLLBACK",
};
export class InvalidPaginationTokenException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidPaginationTokenException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidPaginationTokenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidPaginationTokenException.prototype);
    }
}
export const DescribePackagesFilterName = {
    PackageID: "PackageID",
    PackageName: "PackageName",
    PackageStatus: "PackageStatus",
};
export const ReservedElasticsearchInstancePaymentOption = {
    ALL_UPFRONT: "ALL_UPFRONT",
    NO_UPFRONT: "NO_UPFRONT",
    PARTIAL_UPFRONT: "PARTIAL_UPFRONT",
};
export const VpcEndpointErrorCode = {
    ENDPOINT_NOT_FOUND: "ENDPOINT_NOT_FOUND",
    SERVER_ERROR: "SERVER_ERROR",
};
export const UpgradeStep = {
    PRE_UPGRADE_CHECK: "PRE_UPGRADE_CHECK",
    SNAPSHOT: "SNAPSHOT",
    UPGRADE: "UPGRADE",
};
export const UpgradeStatus = {
    FAILED: "FAILED",
    IN_PROGRESS: "IN_PROGRESS",
    SUCCEEDED: "SUCCEEDED",
    SUCCEEDED_WITH_ISSUES: "SUCCEEDED_WITH_ISSUES",
};
export const EngineType = {
    Elasticsearch: "Elasticsearch",
    OpenSearch: "OpenSearch",
};
export const MasterUserOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MasterUserName && { MasterUserName: SENSITIVE_STRING }),
    ...(obj.MasterUserPassword && { MasterUserPassword: SENSITIVE_STRING }),
});
export const SAMLOptionsInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MasterUserName && { MasterUserName: SENSITIVE_STRING }),
});
export const AdvancedSecurityOptionsInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.MasterUserOptions && { MasterUserOptions: MasterUserOptionsFilterSensitiveLog(obj.MasterUserOptions) }),
    ...(obj.SAMLOptions && { SAMLOptions: SAMLOptionsInputFilterSensitiveLog(obj.SAMLOptions) }),
});
export const CreateElasticsearchDomainRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AdvancedSecurityOptions && {
        AdvancedSecurityOptions: AdvancedSecurityOptionsInputFilterSensitiveLog(obj.AdvancedSecurityOptions),
    }),
});
export const UpdateElasticsearchDomainConfigRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AdvancedSecurityOptions && {
        AdvancedSecurityOptions: AdvancedSecurityOptionsInputFilterSensitiveLog(obj.AdvancedSecurityOptions),
    }),
});
